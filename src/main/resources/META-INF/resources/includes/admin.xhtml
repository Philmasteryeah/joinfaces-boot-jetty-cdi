<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:p="http://primefaces.org/ui"
	xmlns:adm="http://github.com/adminfaces">
<ui:insert name="metadata" />
<h:head>
	<meta charset="utf-8" />
	<meta
		http-equiv="X-UA-Compatible"
		content="IE=edge" />
	<meta
		name="viewport"
		content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />
	<meta
		name="apple-mobile-web-app-capable"
		content="yes" />
	<meta
		name="mobile-web-app-capable"
		content="yes" />
	<f:loadBundle
		var="adm"
		basename="admin" />
	<ui:insert name="head" />
	<ui:insert name="head-end" />
</h:head>
<h:body
	styleClass="#{not empty skin ? skin:adm['adminConfig.skin']} sidebar-mini #{not empty sidebarCollapse and sidebarCollapse eq 'true' ? 'sidebar-collapse':''}">
	<ui:insert name="body-begin" />
	<p:ajaxStatus
		rendered="#{adm['adminConfig.renderAjaxStatus']}"
		onstart="showBar();"
		onsuccess="hideBar();" />
	<div class="wrapper">
		<div
			id="loader"
			class="load-bar"
			style="display: none">
			<div class="bar"></div>
			<div class="bar"></div>
			<div class="bar"></div>
		</div>
		<header class="main-header">
			<a
				href="/index.xhtml"
				class="logo">
				<span class="logo-mini">
					<ui:insert name="logo-mini" />
				</span>
				<span class="logo-lg">
					<ui:insert name="logo-lg" />
				</span>
				<span class="logo-lg">
					<ui:insert name="logo" />
				</span>
			</a>
			<nav class="navbar navbar-static-top">
				<a
					href="/index.xhtml"
					class="sidebar-toggle"
					data-toggle="push-menu"
					role="button">
					<span class="sr-only"></span>
				</a>
				<div class="navbar-custom-menu">
					<ui:insert name="top-menu" />
				</div>
				<div class="center-navbar">
					<ui:insert name="center-header" />
				</div>
			</nav>
		</header>
		<!-- side menu -->
		<aside
			id="sidebar"
			class="main-sidebar slideout-menu">
			<div>
				<ui:insert name="menu-begin" />
				<ui:fragment rendered="#{adm['adminConfig.renderMenuSearch']}">
					<div class="sidebar-form">
						<div class="input-group">
							<input
								type="text"
								name="q"
								class="form-control"
								placeholder="#{adm['menu.search.placeholder']}"
								autocomplete="off"
								onclick="this.value = '';searchLeftMenu('')"
								onkeyup="searchLeftMenu(this.value)"
								onblur="this.value = '';hideMenuResults()" />
							<span class="input-group-btn">
								<button
									type="submit"
									name="search"
									id="search-btn"
									class="btn btn-flat">
									<i class="fa fa-search"></i>
								</button>
							</span>
						</div>
						<ul
							id="menu-search"
							class="nav navbar-nav"
							role="menu">
							<li class="dropdown">
								<a
									href="#"
									class="dropdown-toggle"
									data-toggle="dropdown"
									aria-expanded="true" />
								<ul
									class="dropdown-menu"
									role="menu">
								</ul>
							</li>
						</ul>
					</div>
				</ui:fragment>
				<section class="sidebar">
					<ui:insert name="menu" />
				</section>
				<ui:insert name="menu-end" />
			</div>
		</aside>
		<!-- content -->
		<div
			id="content"
			class="content-wrapper">
			<adm:breadcrumb
				title="#{title}"
				rendered="#{not empty title and empty requestScope['javax.servlet.error.exception_type'] and empty requestScope['javax.servlet.error.message']}" />
			<ui:insert name="content-wrapper" />
			<section class="content-header">
				<h1>
					<ui:insert name="title">
						<h:outputText
							value="#{title}"
							rendered="#{not empty title and empty requestScope['javax.servlet.error.exception_type'] and empty requestScope['javax.servlet.error.message']}" />
					</ui:insert>
					<small>
						<ui:insert name="description" />
					</small>
				</h1>
				<ui:fragment
					rendered="#{(adm['adminConfig.renderBreadCrumb']) and (empty renderBreadCrumb or renderBreadCrumb) and (empty requestScope['javax.servlet.error.exception_type'] and empty requestScope['javax.servlet.error.message'])}">
					<ol
						class="breadcrumb"
						style="overflow: hidden;">
						<li style="position: relative;">
							<h:form prependId="false">
								<p:commandLink
									id="link-home"
									action="#{breadCrumbMB.clearAndHome}"
									styleClass="ripplelink"
									process="@this"
									update="@none">
									<i class="fa fa-home"></i>
									<h:outputText value="#{adm['label.home']}" />
								</p:commandLink>
							</h:form>
						</li>
						<ui:repeat
							value="#{breadCrumbMB.breadCrumbs}"
							var="b"
							varStatus="status">
							<li class="#{status.last ? 'active':''}">
								<h:panelGroup rendered="#{status.last}">
                                    #{b.title}
                                </h:panelGroup>
								<h:panelGroup rendered="#{not status.last}">
									<a
										href="#{request.contextPath.concat(b.link)}"
										style="color: #3C8DBC; position: relative"
										class="ripplelink"> #{b.title} </a>
								</h:panelGroup>
							</li>
						</ui:repeat>
					</ol>
				</ui:fragment>
				<ui:insert name="content-header" />
			</section>
			<section class="content">
				<ui:insert name="content-begin" />
				<ui:fragment rendered="#{adm['adminConfig.renderMessages'] and (empty renderMessages or renderMessages)}">
					<div class="row">
						<div class="col-sm-12">
							<p:messages
								id="messages"
								closable="true"
								globalOnly="true"
								showDetail="true"
								severity="error,fatal"
								escape="false">
								<p:autoUpdate />
							</p:messages>
							<!-- we need two messages because info-messages are hidden by javascript  -->
							<p:messages
								id="info-messages"
								closable="true"
								showDetail="true"
								severity="info,warn"
								escape="false">
								<p:autoUpdate />
							</p:messages>
							<p:tooltip />
							<!-- exception messages with type tooltip -->
						</div>
					</div>
				</ui:fragment>
				<ui:insert name="body" />
			</section>
			<ui:insert name="content-end" />
		</div>
		<footer class="main-footer">
			<ui:insert name="footer" />
		</footer>
		<div
			id="scrollTop"
			class="ripplelink scroll-top"
			onclick="window.scrollTo(0, 0)">
			<i class="fa fa-chevron-up"></i>
		</div>
		<ui:insert name="wrapper-end" />
		<ui:fragment
			rendered="#{adm['adminConfig.renderControlSidebar'] and (empty renderControlSidebar or renderControlSidebar)}">
			<!-- controlsidebar component, can't be a composite component because of multiple ui:insert and can't be an external xhtml because myfaces will not propagete ui:params and child pages will not be able to define inserted regions -->
			<h:form prependId="false">
				<h:panelGroup
					id="controlsidebarPanel"
					layout="block"
					styleClass="#{adm['adminConfig.controlSidebar.showOnMobile'] ? '':'hidden-sm hidden-xs'}">
					<ui:insert name="before-controlsidebar-content" />
					<aside class="control-sidebar control-sidebar-dark">
						<ul class="nav nav-tabs nav-justified control-sidebar-tabs">
							<li class="active">
								<a
									href="#control-sidebar-theme-demo-options-tab"
									data-toggle="tab">
									<i class="fa fa-wrench"></i>
								</a>
							</li>
							<ui:insert name="controlsidebar-tabs" />
						</ul>
						<div class="tab-content">
							<div
								id="control-sidebar-theme-demo-options-tab"
								class="tab-pane active">
								<div
									id="restore-defaults"
									style="font-size: 11px;"
									class="align-right">
									<a href="#">
										<i class="fa fa-recycle"></i>
										<span>
											<p:outputLabel value="#{adm['controlsidebar.label.restore-defaults']}" />
										</span>
									</a>
									<p:remoteCommand
										name="loadLayoutDefaults"
										action="#{skinMB.init()}"
										process="@this"
										update="@none"
										global="false"
										oncomplete="resetDefaultTemplate()" />
									<p:remoteCommand
										name="resetDefaultTemplate"
										action="#{layoutMB.init()}"
										process="@this"
										update="@none"
										global="false" />
								</div>
								<ui:insert name="before-controlsidebar" />
								<div>
									<h4 class="control-sidebar-heading">#{adm['controlsidebar.header']}</h4>
									<div class="form-group">
										<span class="control-sidebar-subheading">
											<p:outputLabel
												id="toggle-menu-layout-label"
												value="#{adm['controlsidebar.label.menu-horientation']}"
												for="toggle-menu-layout" />
											<p:selectBooleanCheckbox
												value="#{layoutMB.leftMenuTemplate}"
												id="toggle-menu-layout"
												styleClass="pull-right black"
												widgetVar="toggleLayout">
												<p:ajax
													update="@none"
													global="false"
													oncomplete="updateTemplate()" />
											</p:selectBooleanCheckbox>
											<p:remoteCommand
												name="updateTemplate"
												action="#{layoutMB.toggleTemplate}"
												process="@this"
												update="@none"
												global="false" />
										</span>
										<p>
											<h:outputText
												escape="false"
												value="#{adm['controlsidebar.txt.menu-horientation']}" />
										</p>
									</div>
									<div class="form-group">
										<span class="control-sidebar-subheading">
											<p:outputLabel
												id="fixed-layout-label"
												value="#{adm['controlsidebar.label.fixed-layout']}"
												for="fixed-layout" />
											<p:selectBooleanCheckbox
												value="#{layoutMB.fixedLayout}"
												id="fixed-layout"
												widgetVar="fixedLayout"
												styleClass="pull-right black">
												<p:ajax
													update="@none"
													global="false"
													listener="#{layoutMB.toggleFixedLayout()}"
													partialSubmit="true" />
											</p:selectBooleanCheckbox>
										</span>
										<p>
											<h:outputText
												escape="false"
												value="#{adm['controlsidebar.txt.fixed-layout']}" />
										</p>
									</div>
									<div class="form-group">
										<span class="control-sidebar-subheading">
											<p:outputLabel
												id="boxed-layout-label"
												value="#{adm['controlsidebar.label.boxed-layout']}"
												for="boxed-layout" />
											<p:selectBooleanCheckbox
												value="#{layoutMB.boxedLayout}"
												id="boxed-layout"
												widgetVar="boxedLayout"
												styleClass="pull-right black">
												<p:ajax
													update="@none"
													global="false"
													listener="#{layoutMB.toggleBoxedLayout()}"
													partialSubmit="true" />
											</p:selectBooleanCheckbox>
										</span>
										<p>
											<h:outputText
												escape="false"
												value="#{adm['controlsidebar.txt.boxed-layout']}" />
										</p>
									</div>
									<div class="form-group">
										<span class="control-sidebar-subheading">
											<p:outputLabel
												id="sidebar-collapsed-label"
												value="#{adm['controlsidebar.label.sidebar-collapsed']}"
												for="sidebar-collapsed" />
											<p:selectBooleanCheckbox
												value="#{layoutMB.sidebarCollapsed}"
												disabled="#{not layoutMB.defaultTemplate}"
												id="sidebar-collapsed"
												widgetVar="sidebarCollapsed"
												styleClass="pull-right black">
												<p:ajax
													update="@none"
													global="false"
													listener="#{layoutMB.toggleSidebarCollapsed()}"
													partialSubmit="true" />
											</p:selectBooleanCheckbox>
										</span>
										<p>
											<h:outputText
												escape="false"
												value="#{adm['controlsidebar.txt.sidebar-collapsed']}" />
										</p>
									</div>
									<div class="form-group">
										<span class="control-sidebar-subheading">
											<p:outputLabel
												id="sidebar-expand-hover-label"
												value="#{adm['controlsidebar.label.sidebar-expand-hover']}"
												for="sidebar-expand-hover" />
											<p:selectBooleanCheckbox
												value="#{layoutMB.expandOnHover}"
												disabled="#{not layoutMB.defaultTemplate}"
												id="sidebar-expand-hover"
												widgetVar="sidebarExpand"
												styleClass="pull-right black">
												<p:ajax
													update="@none"
													global="false"
													listener="#{layoutMB.toggleExpandOnHover()}"
													partialSubmit="true" />
											</p:selectBooleanCheckbox>
										</span>
										<p>
											<h:outputText
												escape="false"
												value="#{adm['controlsidebar.txt.sidebar-expand-hover']}" />
										</p>
									</div>
									<div class="form-group">
										<span class="control-sidebar-subheading">
											<p:outputLabel
												id="control-sidebar-toggle-label"
												value="#{adm['controlsidebar.label.sidebar-slide']}"
												for="control-sidebar-toggle" />
											<p:selectBooleanCheckbox
												value="#{layoutMB.fixedControlSidebar}"
												id="control-sidebar-toggle"
												widgetVar="fixedControlSidebar"
												styleClass="pull-right black">
												<p:ajax
													update="@none"
													global="false"
													listener="#{layoutMB.toggleFixedControlSidebar()}"
													partialSubmit="true" />
											</p:selectBooleanCheckbox>
										</span>
										<p>
											<h:outputText
												escape="false"
												value="#{adm['controlsidebar.txt.sidebar-slide']}" />
										</p>
									</div>
									<div class="form-group">
										<span class="control-sidebar-subheading">
											<p:outputLabel
												value="#{adm['controlsidebar.label.sidebar-skin']}"
												for="sidebar-skin" />
											<p:selectBooleanCheckbox
												value="#{layoutMB.darkControlSidebarSkin}"
												id="sidebar-skin"
												widgetVar="controlSidebarSkin"
												styleClass="pull-right black">
												<p:ajax
													update="@none"
													global="false"
													listener="#{layoutMB.toggleControlSidebarSkin()}"
													partialSubmit="true" />
											</p:selectBooleanCheckbox>
										</span>
										<p>
											<h:outputText
												escape="false"
												value="#{adm['controlsidebar.txt.sidebar-skin']}" />
										</p>
									</div>
									<h4 class="control-sidebar-heading">#{adm['controlsidebar.header.skins']}</h4>
									<ul class="list-unstyled clearfix">
										<li style="float: left; width: 33.33333%; padding: 5px;">
											<p:commandLink
												id="btn-skin-blue"
												styleClass="skin-link clearfix #{skinMB.skin eq 'skin-blue' ? '':'full-opacity-hover'}"
												oncomplete="replaceSkinWith('skin-blue');updateSkinBlue()"
												global="false"
												process="@none"
												update="@none"
												partialSubmit="true">
												<!-- the link can't process anything otherwise the controlsidebar will collapse when changing the skin-->
												<div>
													<span style="display: block; width: 20%; float: left; height: 7px; background: #367fa9"> </span>
													<span
														class="bg-light-blue"
														style="display: block; width: 80%; float: left; height: 7px;"> </span>
												</div>
												<div>
													<span style="display: block; width: 20%; float: left; height: 20px; background: #222d32"></span>
													<span style="display: block; width: 80%; float: left; height: 20px; background: #f4f5f7"></span>
												</div>
											</p:commandLink>
											<p:remoteCommand
												name="updateSkinBlue"
												action="#{skinMB.changeSkin('skin-blue')}"
												process="@this"
												update="@none"
												global="false" />
											<p class="text-center no-margin">Blue</p>
										</li>
										<li style="float: left; width: 33.33333%; padding: 5px;">
											<p:commandLink
												id="btn-skin-black"
												styleClass="skin-link clearfix #{skinMB.skin eq 'skin-black' ? '':'full-opacity-hover'}"
												oncomplete="replaceSkinWith('skin-black');updateSkinBlack()"
												global="false"
												process="@none"
												update="@none"
												partialSubmit="true">
												<div
													style="box-shadow: 0 0 2px rgba(0, 0, 0, 0.1)"
													class="clearfix">
													<span style="display: block; width: 20%; float: left; height: 7px; background: #fefefe"></span>
													<span style="display: block; width: 80%; float: left; height: 7px; background: #fefefe"></span>
												</div>
												<div>
													<span style="display: block; width: 20%; float: left; height: 20px; background: #222"></span>
													<span style="display: block; width: 80%; float: left; height: 20px; background: #f4f5f7"></span>
												</div>
											</p:commandLink>
											<p:remoteCommand
												name="updateSkinBlack"
												action="#{skinMB.changeSkin('skin-black')}"
												process="@this"
												update="@none"
												global="false" />
											<p class="text-center no-margin">Black</p>
										</li>
										<li style="float: left; width: 33.33333%; padding: 5px;">
											<p:commandLink
												id="btn-skin-purple"
												styleClass="skin-link clearfix #{skinMB.skin eq 'skin-purple' ? '':'full-opacity-hover'}"
												oncomplete="replaceSkinWith('skin-purple');updateSkinPurple()"
												process="@none"
												update="@none"
												global="false"
												partialSubmit="true">
												<div>
													<span
														style="display: block; width: 20%; float: left; height: 7px;"
														class="bg-purple-active"></span>
													<span
														class="bg-purple"
														style="display: block; width: 80%; float: left; height: 7px;"></span>
												</div>
												<div>
													<span style="display: block; width: 20%; float: left; height: 20px; background: #222d32"></span>
													<span style="display: block; width: 80%; float: left; height: 20px; background: #f4f5f7"></span>
												</div>
											</p:commandLink>
											<p:remoteCommand
												name="updateSkinPurple"
												action="#{skinMB.changeSkin('skin-purple')}"
												process="@this"
												update="@none"
												global="false" />
											<p class="text-center no-margin">Purple</p>
										</li>
										<li style="float: left; width: 33.33333%; padding: 5px;">
											<p:commandLink
												id="btn-skin-green"
												styleClass="skin-link clearfix #{skinMB.skin eq 'skin-green' ? '':'full-opacity-hover'}"
												oncomplete="replaceSkinWith('skin-green');updateSkinGreen()"
												process="@none"
												update="@none"
												global="false"
												partialSubmit="true">
												<div>
													<span
														style="display: block; width: 20%; float: left; height: 7px;"
														class="bg-green-active"></span>
													<span
														class="bg-green"
														style="display: block; width: 80%; float: left; height: 7px;"></span>
												</div>
												<div>
													<span style="display: block; width: 20%; float: left; height: 20px; background: #222d32"></span>
													<span style="display: block; width: 80%; float: left; height: 20px; background: #f4f5f7"></span>
												</div>
											</p:commandLink>
											<p:remoteCommand
												name="updateSkinGreen"
												action="#{skinMB.changeSkin('skin-green')}"
												process="@this"
												update="@none"
												global="false" />
											<p class="text-center no-margin">Green</p>
										</li>
										<li style="float: left; width: 33.33333%; padding: 5px;">
											<p:commandLink
												id="btn-skin-red"
												styleClass="skin-link clearfix #{skinMB.skin eq 'skin-red' ? '':'full-opacity-hover'}"
												oncomplete="replaceSkinWith('skin-red');updateSkinRed()"
												process="@none"
												update="@none"
												global="false"
												partialSubmit="true">
												<div>
													<span
														style="display: block; width: 20%; float: left; height: 7px;"
														class="bg-red-active"></span>
													<span
														class="bg-red"
														style="display: block; width: 80%; float: left; height: 7px;"></span>
												</div>
												<div>
													<span style="display: block; width: 20%; float: left; height: 20px; background: #222d32"></span>
													<span style="display: block; width: 80%; float: left; height: 20px; background: #f4f5f7"></span>
												</div>
											</p:commandLink>
											<p:remoteCommand
												name="updateSkinRed"
												action="#{skinMB.changeSkin('skin-red')}"
												process="@this"
												update="@none"
												global="false" />
											<p class="text-center no-margin">Red</p>
										</li>
										<li style="float: left; width: 33.33333%; padding: 5px;">
											<p:commandLink
												id="btn-skin-yellow"
												styleClass="skin-link clearfix #{skinMB.skin eq 'skin-yellow' ? '':'full-opacity-hover'}"
												oncomplete="replaceSkinWith('skin-yellow');updateSkinYellow()"
												process="@none"
												update="@none"
												global="false"
												partialSubmit="true">
												<div>
													<span
														style="display: block; width: 20%; float: left; height: 7px;"
														class="bg-yellow-active"></span>
													<span
														class="bg-yellow"
														style="display: block; width: 80%; float: left; height: 7px;"></span>
												</div>
												<div>
													<span style="display: block; width: 20%; float: left; height: 20px; background: #222d32"></span>
													<span style="display: block; width: 80%; float: left; height: 20px; background: #f4f5f7"></span>
												</div>
											</p:commandLink>
											<p:remoteCommand
												name="updateSkinYellow"
												action="#{skinMB.changeSkin('skin-yellow')}"
												process="@this"
												update="@none"
												global="false" />
											<p class="text-center no-margin">Yellow</p>
										</li>
										<li style="float: left; width: 33.33333%; padding: 5px;">
											<p:commandLink
												id="btn-skin-teal"
												styleClass="skin-link clearfix #{skinMB.skin eq 'skin-teal' ? '':'full-opacity-hover'}"
												oncomplete="replaceSkinWith('skin-teal');updateSkinTeal()"
												process="@none"
												update="@none"
												global="false"
												partialSubmit="true">
												<div>
													<span
														style="display: block; width: 20%; float: left; height: 7px;"
														class="bg-teal-active"></span>
													<span
														class="bg-teal"
														style="display: block; width: 80%; float: left; height: 7px;"></span>
												</div>
												<div>
													<span style="display: block; width: 20%; float: left; height: 20px; background: #222d32"></span>
													<span style="display: block; width: 80%; float: left; height: 20px; background: #f4f5f7"></span>
												</div>
											</p:commandLink>
											<p:remoteCommand
												name="updateSkinTeal"
												action="#{skinMB.changeSkin('skin-teal')}"
												process="@this"
												update="@none"
												global="false" />
											<p class="text-center no-margin">Teal</p>
										</li>
										<li style="float: left; width: 33.33333%; padding: 5px;">
											<p:commandLink
												id="btn-skin-blue-light"
												styleClass="skin-link clearfix #{skinMB.skin eq 'skin-blue-light' ? '':'full-opacity-hover'}"
												oncomplete="replaceSkinWith('skin-blue-light');updateSkinBlueLight()"
												process="@none"
												update="@none"
												global="false"
												partialSubmit="true">
												<div>
													<span style="display: block; width: 20%; float: left; height: 7px; background: #367fa9"></span>
													<span
														class="bg-light-blue"
														style="display: block; width: 80%; float: left; height: 7px;"></span>
												</div>
												<div>
													<span style="display: block; width: 20%; float: left; height: 20px; background: #f9fafc"></span>
													<span style="display: block; width: 80%; float: left; height: 20px; background: #f4f5f7"></span>
												</div>
											</p:commandLink>
											<p:remoteCommand
												name="updateSkinBlueLight"
												action="#{skinMB.changeSkin('skin-blue-light')}"
												process="@this"
												update="@none"
												global="false" />
											<p class="text-center no-margin">Blue Light</p>
										</li>
										<li style="float: left; width: 33.33333%; padding: 5px;">
											<p:commandLink
												id="btn-skin-black-light"
												styleClass="skin-link clearfix #{skinMB.skin eq 'skin-black-light' ? '':'full-opacity-hover'}"
												oncomplete="replaceSkinWith('skin-black-light');updateSkinBlackLight()"
												process="@none"
												update="@none"
												global="false"
												partialSubmit="true">
												<div
													style="box-shadow: 0 0 2px rgba(0, 0, 0, 0.1)"
													class="clearfix">
													<span style="display: block; width: 20%; float: left; height: 7px; background: #fefefe"></span>
													<span style="display: block; width: 80%; float: left; height: 7px; background: #fefefe"></span>
												</div>
												<div>
													<span style="display: block; width: 20%; float: left; height: 20px; background: #f9fafc"></span>
													<span style="display: block; width: 80%; float: left; height: 20px; background: #f4f5f7"></span>
												</div>
											</p:commandLink>
											<p:remoteCommand
												name="updateSkinBlackLight"
												action="#{skinMB.changeSkin('skin-black-light')}"
												process="@this"
												update="@none"
												global="false" />
											<p class="text-center no-margin">Black Light</p>
										</li>
										<li style="float: left; width: 33.33333%; padding: 5px;">
											<p:commandLink
												id="btn-skin-purple-light"
												styleClass="skin-link clearfix #{skinMB.skin eq 'skin-purple-light' ? '':'full-opacity-hover'}"
												oncomplete="replaceSkinWith('skin-purple-light');updateSkinPurpleLight()"
												process="@none"
												update="@none"
												global="false"
												partialSubmit="true">
												<div>
													<span
														style="display: block; width: 20%; float: left; height: 7px;"
														class="bg-purple-active"></span>
													<span
														class="bg-purple"
														style="display: block; width: 80%; float: left; height: 7px;"></span>
												</div>
												<div>
													<span style="display: block; width: 20%; float: left; height: 20px; background: #f9fafc"></span>
													<span style="display: block; width: 80%; float: left; height: 20px; background: #f4f5f7"></span>
												</div>
											</p:commandLink>
											<p:remoteCommand
												name="updateSkinPurpleLight"
												action="#{skinMB.changeSkin('skin-purple-light')}"
												process="@this"
												update="@none"
												global="false" />
											<p class="text-center no-margin">Purple Light</p>
										</li>
										<li style="float: left; width: 33.33333%; padding: 5px;">
											<p:commandLink
												id="btn-skin-red-light"
												styleClass="skin-link clearfix #{skinMB.skin eq 'skin-red-light' ? '':'full-opacity-hover'}"
												oncomplete="replaceSkinWith('skin-red-light');updateSkinRedLight()"
												process="@none"
												update="@none"
												global="false"
												partialSubmit="true">
												<div>
													<span
														style="display: block; width: 20%; float: left; height: 7px;"
														class="bg-red-active"></span>
													<span
														class="bg-red"
														style="display: block; width: 80%; float: left; height: 7px;"></span>
												</div>
												<div>
													<span style="display: block; width: 20%; float: left; height: 20px; background: #f9fafc"></span>
													<span style="display: block; width: 80%; float: left; height: 20px; background: #f4f5f7"></span>
												</div>
											</p:commandLink>
											<p:remoteCommand
												name="updateSkinRedLight"
												action="#{skinMB.changeSkin('skin-red-light')}"
												process="@this"
												update="@none"
												global="false" />
											<p class="text-center no-margin">Red Light</p>
										</li>
										<li style="float: left; width: 33.33333%; padding: 5px;">
											<p:commandLink
												id="btn-skin-green-light"
												styleClass="skin-link clearfix #{skinMB.skin eq 'skin-green-light' ? '':'full-opacity-hover'}"
												oncomplete="replaceSkinWith('skin-green-light');updateSkinGreenLight()"
												process="@none"
												update="@none"
												global="false"
												partialSubmit="true">
												<div>
													<span
														style="display: block; width: 20%; float: left; height: 7px;"
														class="bg-green-active"></span>
													<span
														class="bg-green"
														style="display: block; width: 80%; float: left; height: 7px;"></span>
												</div>
												<div>
													<span style="display: block; width: 20%; float: left; height: 20px; background: #f9fafc"></span>
													<span style="display: block; width: 80%; float: left; height: 20px; background: #f4f5f7"></span>
												</div>
											</p:commandLink>
											<p:remoteCommand
												name="updateSkinGreenLight"
												action="#{skinMB.changeSkin('skin-green-light')}"
												process="@this"
												update="@none"
												global="false" />
											<p class="text-center no-margin">Green Light</p>
										</li>
										<li style="float: left; width: 33.33333%; padding: 5px;">
											<p:commandLink
												id="btn-skin-yellow-light"
												styleClass="skin-link clearfix #{skinMB.skin eq 'skin-yellow-light' ? '':'full-opacity-hover'}"
												oncomplete="replaceSkinWith('skin-yellow-light');updateSkinYellowLight()"
												process="@none"
												update="@none"
												global="false"
												partialSubmit="true">
												<div>
													<span
														style="display: block; width: 20%; float: left; height: 7px;"
														class="bg-yellow-active"></span>
													<span
														class="bg-yellow"
														style="display: block; width: 80%; float: left; height: 7px;"></span>
												</div>
												<div>
													<span style="display: block; width: 20%; float: left; height: 20px; background: #f9fafc"></span>
													<span style="display: block; width: 80%; float: left; height: 20px; background: #f4f5f7"></span>
												</div>
											</p:commandLink>
											<p:remoteCommand
												name="updateSkinYellowLight"
												action="#{skinMB.changeSkin('skin-yellow-light')}"
												process="@this"
												update="@none"
												global="false" />
											<p class="text-center no-margin">Yellow Light</p>
										</li>
										<li style="float: left; width: 33.33333%; padding: 5px;">
											<p:commandLink
												id="btn-skin-teal-light"
												styleClass="skin-link clearfix #{skinMB.skin eq 'skin-teal-light' ? '':'full-opacity-hover'}"
												oncomplete="replaceSkinWith('skin-teal-light');updateSkinTealLight()"
												process="@none"
												update="@none"
												global="false"
												partialSubmit="true">
												<div>
													<span
														style="display: block; width: 20%; float: left; height: 7px;"
														class="bg-teal-active"></span>
													<span
														class="bg-teal"
														style="display: block; width: 80%; float: left; height: 7px;"></span>
												</div>
												<div>
													<span style="display: block; width: 20%; float: left; height: 20px; background: #f9fafc"></span>
													<span style="display: block; width: 80%; float: left; height: 20px; background: #f4f5f7"></span>
												</div>
											</p:commandLink>
											<p:remoteCommand
												name="updateSkinTealLight"
												action="#{skinMB.changeSkin('skin-teal-light')}"
												process="@this"
												update="@none"
												global="false" />
											<p class="text-center no-margin">Teal Light</p>
										</li>
										<ui:insert name="after-controlsidebar-skin" />
									</ul>
									<ui:insert name="after-controlsidebar-tabs" />
								</div>
							</div>
							<ui:insert name="controlsidebar-content" />
						</div>
					</aside>
					<ui:insert name="after-controlsidebar-content" />
					<div class="control-sidebar-bg"></div>
					<script type="text/javascript">
                        /*<![CDATA[*/
                        function replaceSkinWith(newSkin) {
                            $('.skin-link').each(function () {
                                $(this).addClass('full-opacity-hover');
                            });
                            $('#btn-' + newSkin).removeClass('full-opacity-hover');
                            var cl = $('body').attr("class").split(" ");
                            for (var i = 0; i < cl.length; i++) {
                                if (cl[i].startsWith('skin-')) {
                                    $('body').removeClass(cl[i])
                                }
                            }
                            $('body').addClass(newSkin);
                            if (typeof (Storage) !== 'undefined') {
                                localStorage.setItem('layout.skin', newSkin)
                            }
                        }

                        /* ]]>*/
                    </script>
				</h:panelGroup>
			</h:form>
		</ui:fragment>
	</div>
	<ui:insert name="after-wrapper" />
	<script type="text/javascript">
        if (isMobile()) {
            window.onscroll = activateScrollToTop;
        }
    </script>
	<adm:ripple />
	<h:outputScript
		library="primefaces"
		name="jquery/jquery.js"
		target="head" />
	<h:outputScript
		library="js"
		name="bootstrap.min.js"
		target="head" />
	<h:outputScript
		library="js"
		name="admin-lte.min.js"
		target="head" />
	<h:outputScript
		library="js"
		name="admintemplate.js"
		target="head" />
	<!-- slide in/out menu integration  -->
	<h:outputScript
		library="js"
		name="slideout.min.js"
		target="head"
		rendered="#{adm['adminConfig.enableSlideMenu'] and (empty enableSlideMenu or enableSlideMenu)}" />
	<h:outputScript
		library="js"
		name="adminslide.js"
		target="head"
		rendered="#{adm['adminConfig.enableSlideMenu'] and (empty enableSlideMenu or enableSlideMenu)}" />
	<h:outputScript
		library="js"
		name="control-sidebar.js"
		target="head"
		rendered="#{adm['adminConfig.renderControlSidebar'] and (empty renderControlSidebar or renderControlSidebar)}" />
	<h:outputScript
		library="js"
		name="slimscroll.min.js"
		target="head" />
	<ui:fragment
		rendered="#{not adm['adminConfig.enableSlideMenu'] or (not empty enableSlideMenu and enableSlideMenu eq 'false')}">
		<script type="text/javascript">
            $(document).ready(function () {
                $('.slideout-menu').removeClass('slideout-menu');
                $('.slideout-panel').removeClass('slideout-panel');
            });

        </script>
	</ui:fragment>
	<ui:fragment rendered="#{adm['adminConfig.autoShowNavbar'] and (empty autoShowNavbar or autoShowNavbar)}">
		<script type="text/javascript">
            $(window).scroll(function () {
                if (isMobile()) {
                    var minScrollTimeNav = 300;
                    var now = new Date().getTime();
                    if (!scrollTimerNav) {
                        if (now - lastScrollFireTimeNav > (3 * minScrollTimeNav)) {
                            activateAutoShowNavbarOnScrollUp();   // fire immediately on first scroll
                            lastScrollFireTimeNav = now;
                        }
                        scrollTimerNav = setTimeout(function () {
                            scrollTimerNav = null;
                            lastScrollFireTimeNav = new Date().getTime();
                            activateAutoShowNavbarOnScrollUp();
                        }, minScrollTimeNav);
                    }
                }
            });
        </script>
	</ui:fragment>
	<ui:fragment rendered="#{adm['adminConfig.autoHideMessages'] and (empty autoHideMessages or autoHideMessages)}">
		<script type="text/javascript">
            //<![CDATA[
            /* hide info messages */
            $(document).on("pfAjaxComplete", function () {
                var $messages = $("div[id$='info-messages']");

                if ($messages.length) {
                    var wordCount = $messages.text().split(/\W/).length;
                    var readingTimeMillis = #{adm['adminConfig.messagesHideTimeout']} + (wordCount * 200);

                    setTimeout(function () {
                        $messages.slideUp();
                    }, readingTimeMillis);
                }

            });

            $(document).ready(function () {
                var $messages = $("div[id$='info-messages']");

                if ($messages.length) {
                    var wordCount = $messages.text().split(/\W/).length;
                    var readingTimeMillis = #{adm['adminConfig.messagesHideTimeout']} + (wordCount * 200);

                    setTimeout(function () {
                        $messages.slideUp();
                    }, readingTimeMillis);
                }

            });
            //]]>
        </script>
	</ui:fragment>
	<ui:fragment rendered="#{not empty skin}">
		<script type="text/javascript">
            $(document).ready(function () {
                store('layout.skin', null);
            });
        </script>
	</ui:fragment>
	<ui:fragment rendered="#{adm['adminConfig.iconsEffect'] and (empty iconsEffect or iconsEffect)}">
		<script type="text/javascript">
            $(document).ready(function () {
                activateRippleIcons();
            });

            $(document).on("pfAjaxComplete", function () {
                activateRippleIcons();
            });
        </script>
	</ui:fragment>
	<p:dialog
		id="adminStatusDialog"
		modal="true"
		style="background: transparent; box-shadow: none;"
		widgetVar="statusDialog"
		draggable="false"
		closable="false"
		resizable="false"
		responsive="true"
		showHeader="false"
		appendTo="@(body)">
		<p:graphicImage
			library="images"
			name="#{adm['adminConfig.loadingImage']}" />
	</p:dialog>
</h:body>
</html>
