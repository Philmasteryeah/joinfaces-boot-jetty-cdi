# Logging
logging.level.org.springframework.web= INFO

#
#server.port=${PORT:9090}

# Database
#spring.database.driverClassName= org.postgresql.Driver
#spring.datasource.url= jdbc:postgresql://localhost:5432/test
#spring.datasource.username= postgres
#spring.datasource.password= postgres

# Primefaces
jsf.primefaces.theme= omega

jsf.jetty.class-path-resource= META-INF/resources

jsf.primeface.moveScriptsToBottom= true

# ssl
#erver.address=127.0.0.1
server.port=${PORT:9090}
#server.ssl.key-store=classpath:KeyStore.jks
#server.ssl.key-store-password=secret
#server.ssl.key-password=secret
#server.ssl.protocol: TLSv1.2
#server.compression.enabled=true

#server.http2.enabled=true
#server.http2.alpnDebug=true

# FLYWAY (FlywayProperties)
flyway.baseline-description= #
flyway.baseline-version=1 # version to start migration
flyway.baseline-on-migrate= #
flyway.check-location=false # Check that migration scripts location exists.
flyway.clean-on-validation-error= #
flyway.enabled=true # Enable flyway.
flyway.encoding= #
flyway.ignore-failed-future-migration= #
flyway.init-sqls= # SQL statements to execute to initialize a connection immediately after obtaining it.
flyway.locations=classpath:db/migration # locations of migrations scripts
flyway.out-of-order= #
flyway.password= # JDBC password if you want Flyway to create its own DataSource
flyway.placeholder-prefix= #
flyway.placeholder-replacement= #
flyway.placeholder-suffix= #
flyway.placeholders.*= #
flyway.schemas= # schemas to update
flyway.sql-migration-prefix=V #
flyway.sql-migration-separator= #
flyway.sql-migration-suffix=.sql #
flyway.table= #
flyway.url= # JDBC url of the database to migrate. If not set, the primary configured data source is used.
flyway.user= # Login user of the database to migrate.
flyway.validate-on-migrate= #